################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
from . import utils
from . import destructors
libapplication_network_destructors = destructors.lib

class AppnetViewContext(object):
    """

    """

    def __init__(self, viewname):
        """
        Create a new appnet_view_context.
        """
        p = utils.lib.appnet_view_context_new(utils.to_bytes(viewname))
        if p == utils.ffi.NULL:
            raise MemoryError("Could not allocate person")

        # ffi.gc returns a copy of the cdata object which will have the
        # destructor called when the Python object is GC'd:
        # https://cffi.readthedocs.org/en/latest/using.html#ffi-interface
        self._p = utils.ffi.gc(p, libapplication_network_destructors.appnet_view_context_destroy_py)

    def viewname(self):
        """
        Get name of this view
        """
        return utils.lib.appnet_view_context_viewname(self._p)

    def next_triggertime(self):
        """
        Get time this view is going to triggered (in ms)
        """
        return utils.lib.appnet_view_context_next_triggertime(self._p)

    def set_interval(self, interval_in_ms):
        """
        Set interval for this view (in milliseconds)
        """
        utils.lib.appnet_view_context_set_interval(self._p, interval_in_ms)

    def userdata(self):
        """
        Get userdata
        """
        return utils.lib.appnet_view_context_userdata(self._p)

    def set_userdata(self, userdata):
        """
        set userdata
        """
        utils.lib.appnet_view_context_set_userdata(self._p, userdata._p)

    def add_subscriber(self, peer_id):
        """
        set this user(peer-id) to be subscriber
        """
        utils.lib.appnet_view_context_add_subscriber(self._p, utils.to_bytes(peer_id))

    def remove_subscriber(self, peer_id):
        """
        remove this user(peer-id) from subscriber-list
        """
        utils.lib.appnet_view_context_remove_subscriber(self._p, utils.to_bytes(peer_id))

    def get_subscriber_map(self):
        """
        Get the hashtable of all subscrbiers on this view
        """
        return utils.lib.appnet_view_context_get_subscriber_map(self._p)

    def get_amount_subscribers(self):
        """
        Get amount of subscribers
        """
        return utils.lib.appnet_view_context_get_amount_subscribers(self._p)

    def prepare_next_interval(self):
        """
        Setup data for next interval
        """
        utils.lib.appnet_view_context_prepare_next_interval(self._p)

    def set_data(self, data, size):
        """
        Set serialized view-data
        """
        utils.lib.appnet_view_context_set_data(self._p, data._p, size)

    def get_zmsg(self):
        """
        Get zmsg and clears internal zmsg-pointer to NULL
        """
        return utils.lib.appnet_view_context_get_zmsg(self._p)

    @staticmethod
    def test(verbose):
        """
        Self test of this class.
        """
        utils.lib.appnet_view_context_test(verbose)

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
