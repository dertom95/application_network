<class name = "appnet_application" state = "stable">
     <constructor>
        <argument name="parent" type="appnet"/>
        Appnet-Application
    </constructor>

    <constructor name="new_from_zyre">
        <argument name="evt" type="zyre_event"/>
        <argument name="parent" type="appnet"/>
    </constructor>

    <destructor/>

    <method name = "get_name">
        get application name
        <return type="string"/>
    </method>

    <method name = "set_name">
        set application name
        <argument name = "application_name" type = "string"/>
    </method>

    <method name = "get_peer_id">
        get zyre peer id
        <return type="string"/>
    </method>

    <method name = "set_peer_id">
        set zyre peer id
        <argument name = "peer_id" type = "string"/>
    </method>    

    <method name = "parent">
        return parent appnet-node
        <return type="appnet"/>
    </method>

    <method name ="print">
        print application data
    </method>

    <method name = "add_view">
        add application view ( appnet needs to be set as application-type )
        <argument name = "view" type = "string"/>
        <return type = "boolean" />
    </method>

    <method name = "add_views">
        add multiple views to applications
        <argument name = "view_amount" type="number">The amount of views to be added</argument>
        <!-- <argument name = "views" type = "va_list"/> -->
        <argument name = "view" type = "string" variadic = "1" />
    </method>

    <method name = "get_view_list">
        get zlist of all views
        
        <return type = "zlist"/>
    </method>

    <method name = "get_action_list">
        get zlist of all actions
        
        <return type = "zlist"/>
    </method>

    <method name = "add_action">
        add application action ( appnet needs to be set as application-type )
        <argument name = "action" type = "string"/>
        <return type = "boolean" />
    </method>

    <method name = "add_actions">
        add multiple views to applications
        <argument name = "action_amount" type="number">The amount of actions to be added</argument>
        <!-- <argument name = "views" type = "va_list"/> -->
        <argument name = "action" type = "string" variadic = "1" />
    </method>    

    <!-- remote - actions -->
    <method name = "remote_subscribe_view">
        remote: subscribe for this application's view
        <argument name = "view_name" type="string"/>
    </method>

    <method name = "remote_unsubscribe_view">
        remote: unsubscribe from specified view
        <argument name = "view_name" type="string"/>
    </method>

    <method name = "remote_unsubscribe_all">
        remote: unsubscribe from all views of this application
    </method>

    <method name = "remote_trigger_action">
        remote: trigger action
        <argument name = "action_name" type="string"/>
        <argument name = "args" type="string"/>
    </method>

    <method name = "to_metadata_json_string">
        get application meta data a string-json
        <return type = "string" fresh="1"/>
    </method>

 </class>
